// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model EquipeMedica {
  id            String         @id @default(cuid())
  criadoEm      DateTime       @default(now())
  username      String         @unique
  password      String
  nome_completo String
  CRM           String?        @unique
  coren         String?        @unique
  email         String         @unique
  role          Role
  questionario  Questionario[]

  @@map("equipe_medica")
}

model Paciente {
  id                String           @id @default(cuid())
  criadoEm          DateTime         @default(now())
  cpf               String           @unique
  username          String           @unique
  password          String
  nome_completo     String
  telefone          String           @unique
  email             String           @unique
  genero            String
  grau_de_instrucao String
  data_nascimento   DateTime
  idade             Int
  role              Role             @default(paciente)
  endereco          Endereco[]

  @@map("pacientes")
}

model Endereco {
  id         String   @id @default(cuid())
  rua        String
  numero     Int
  bairro     String
  cidade     String
  cep        String
  paciente   Paciente @relation(fields: [pacienteId], references: [id], onDelete: Cascade)
  pacienteId String   @unique

  @@map("enderecos")
}

model Questionario {
  id             String        @id @default(cuid())
  criadoEm       DateTime      @default(now())
  pergunta       String
  observacao     String
  peso           Int
  alternativas   Alternativa[]
  equipeMedica   EquipeMedica  @relation(references: [id], fields: [equipeMedicaId], onDelete: Cascade)
  equipeMedicaId String

  @@map("questionarios")
}

model Alternativa {
  id             String       @id @default(cuid())
  alternativa    String
  peso           Int
  questionario   Questionario @relation(fields: [questionarioId], references: [id], onDelete: Cascade)
  questionarioId String

  @@map("alternativas")
}

enum Role {
  medico
  enfermeiro
  paciente
}
